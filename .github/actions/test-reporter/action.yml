name: test-reporter
description: A wrapper around dorny's test-reporter.
inputs:
  reporter:
    description: Test report format
    required: true

  files_pattern:
    description: test results files to collect and publish
    required: true

  name:
    description: GitHub action "run name"
    required: false
    default: Tests Results

  fail-on-empty:
    description: Set this action as failed if no test results were found
    required: false
    default: "true"

  fail-on-error:
    description: Set action as failed if test report contains any failed test
    required: false
    default: "false"

  use-actions-summary:
    description: Allows you to generate reports for Actions Summary
    required: false
    default: "true"

  only-summary:
    description: Allows you to generate only the summary.
    required: false
    default: "false"

  badge-title:
    description: Customize the title of badges shown for each Actions Summary.
    required: false
    default: tests

  list-suites:
    description: Limits which test suites are listed
    required: false
    default: all

  list-tests:
    description: Limits which test cases are listed
    required: false
    default: failed

  # Must be less or equal to 50.
  max-annotations:
    description: Limits number of created annotations with error message and stack trace captured during test execution.
    required: false
    default: "50"

runs:
  using: composite
  steps:
    # SRC: https://github.com/dorny/test-reporter?tab=readme-ov-file#usage
    - name: test-reporter
      uses: dorny/test-reporter@v1.9.1
      if: always()
      with:
        # Name of the Check Run which will be created
        name: ${{ inputs.name }}

        # Name or regex of artifact containing test results
        # Regular expression must be enclosed in '/'.
        # Values from captured groups will replace occurrences of $N in report name.
        # Example:
        #   artifact: /test-results-(.*)/
        #   name: 'Test report $1'
        #   -> Artifact 'test-result-ubuntu' would create report 'Test report ubuntu'
        # artifact: ''

        # Comma-separated list of paths to test results
        # Supports wildcards via [fast-glob](https://github.com/mrmlnc/fast-glob)
        # All matched result files must be of the same format.
        path: ${{ inputs.files_pattern }}

        # Format of test results. Supported options:
        #   dart-json
        #   dotnet-nunit
        #   dotnet-trx
        #   flutter-json
        #   java-junit
        #   jest-junit
        #   mocha-json
        #   rspec-json
        reporter: ${{ inputs.reporter }}

        # Allows you to generate only the summary.
        # If enabled, the report will contain a table listing each test results file and the number of passed, failed, and skipped tests.
        # Detailed listing of test suites and test cases will be skipped.
        only-summary: ${{ inputs.only-summary }}

        # Allows you to generate reports for Actions Summary
        # https://github.blog/2022-05-09-supercharging-github-actions-with-job-summaries/
        # use-actions-summary: ${{ inputs.use-actions-summary }} # FIXME? "Unexpected input(s)"

        # Customize the title of badges shown for each Actions Summary.
        # Useful when distinguish summaries for tests ran in multiple Actions steps.
        # badge-title: ${{ inputs.badge-title }} # FIXME? "Unexpected input(s)"

        # Limits which test suites are listed:
        #   all
        #   failed
        #   none
        list-suites: ${{ inputs.list-suites }}

        # Limits which test cases are listed:
        #   all
        #   failed
        #   none
        list-tests: ${{ inputs.list-tests }}

        # Limits number of created annotations with error message and stack trace captured during test execution.
        # Must be less or equal to 50.
        max-annotations: ${{ inputs.max-annotations }}

        # Set action as failed if test report contains any failed test
        fail-on-error: ${{ inputs.fail-on-error }}

        # Set this action as failed if no test results were found
        fail-on-empty: ${{ inputs.fail-on-empty }}

        # Relative path under $GITHUB_WORKSPACE where the repository was checked out.
        # working-directory: ''

        # Personal access token used to interact with Github API
        # Default: ${{ github.token }}
        # token: ''
