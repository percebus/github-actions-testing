name: junit
description: junit
inputs:
  reporter:
    description: The test reporter to use.
    required: false
    default: jest-junit

  files_pattern:
    description: The pattern to match the test result files. i.e. 'junit.xml'
    required: false
    default: junit.xml

  tests_name:
    description: The name of the tests.
    required: false
    default: Unit Tests

  summary_title:
    description: The title of the test summary.
    required: false
    default: Unit Tests Summary

  # test-reporter inputs
  list-suites:
    description: Limits which test suites are listed
    required: false
    default: all

  list-tests:
    description: Limits which test cases are listed
    required: false
    default: failed

  publish-test-deltas:
    description: Publish test deltas
    required: false
    default: "true"

  # publish-test-deltas inputs
  runs-on:
    description: The OS to run the action on.
    required: false
    default: ubuntu-latest

runs:
  using: composite
  steps:
    - run: echo "Preparing percebus/github-actions-testing/.../actions/junit..."
      # NOTE: Force even if npm test failed
      if: success() || failure()
      shell: bash
      name: Run junit action

    - uses: percebus/github-actions-testing/.github/actions/test-reporter@main
      if: ${{ inputs.reporter != '' }}
      with:
        name: ${{ inputs.tests_name }}
        reporter: ${{ inputs.reporter || 'jest-junit' }}
        files_pattern: ${{ inputs.files_pattern || 'INVALID' }}
        list-suites: ${{ inputs.list-suites }}
        list-tests: ${{ inputs.list-tests }}

    - uses: percebus/github-actions-testing/.github/actions/test-summary@main
      if: ${{ inputs.summary_title != '' }}
      with:
        title: ${{ inputs.summary_title }}
        files_pattern: ${{ inputs.files_pattern || 'INVALID' }}

    - uses: percebus/github-actions-testing/.github/actions/publish-test-deltas@main
      if: ${{ inputs.publish-test-deltas == 'true' }}
      with:
        runs-on: ${{ inputs.runs-on }}
        files_pattern: ${{ inputs.files_pattern || 'INVALID' }}
